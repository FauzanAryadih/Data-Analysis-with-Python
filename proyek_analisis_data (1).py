# -*- coding: utf-8 -*-
"""Proyek_Analisis_Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wOGfukTJN851feoLH4pyo5KVqJ1W6yFG

# Proyek Analisis Data: [Input Nama Dataset]
- **Nama:** [FAUZAN ARYADIH]
- **Email:** [fauzanaryadih77@gmail.com]
- **ID Dicoding:** [Fauzan Aryadih]

## Menentukan Pertanyaan Bisnis

- Berapa banyak pelanggan unik yang terdapat di dataset ini, dan bagaimana distribusinya di setiap negara bagian?
- Kota mana yang memiliki jumlah pelanggan terbanyak, dan bagaimana distribusinya menurut negara bagian?

## Import Semua Packages/Library yang Digunakan
"""

pip install streamlit

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st
from babel.numbers import format_currency

"""## Data Wrangling

### Gathering Data
"""

import pandas as pd

df = pd.read_csv("customers_dataset.csv", delimiter=",")

import pandas as pd

customer_id_df = pd.read_csv("customers_dataset.csv")
customer_id_df.head()

"""**Insight:**
- xxx
- xxx

### Assessing Data
"""

import pandas as pd

# Assuming 'df' is your DataFrame
customer_id = df['customer_id']  # Replace 'df' with your DataFrame name
print(customer_id.isna().sum())  # Count missing values in the 'customer_id' column

import pandas as pd

# Load the CSV file
df = pd.read_csv("customers_dataset.csv")

# Check for duplicate rows
print("Number of duplicate rows:", df.duplicated().sum())

"""**Insight:**
- xxx
- xxx

### Cleaning Data
"""

import pandas as pd

customer_id_df = pd.read_csv("customers_dataset.csv")

customer_id_df.dropna(axis=0, inplace=True)

data['customer_zip_code_prefix'] = data['customer_zip_code_prefix'].fillna(value=data['customer_zip_code_prefix'].mode()[0])

modus_value = data['customer_zip_code_prefix'].mode()[0]
print(modus_value)

"""**Insight:**
- xxx
- xxx
"""

import pandas as pd

df = pd.read_csv("customers_dataset.csv")
df.drop_duplicates(inplace=True)

unique_customers = df['customer_id'].nunique()
print(f"Jumlah pelanggan unik: {unique_customers}")

customer_state = df['customer_state'].value_counts()
print(customer_state)

customer_city= df['customer_city'].value_counts()
print(customer_city.head(10))

"""## Exploratory Data Analysis (EDA)

### Explore ...

**Insight:**
Distribusi Data:

Bagaimana distribusi pelanggan di berbagai dimensi (misalnya, negara bagian, kota)?
Apakah terdapat pola yang dominan dalam dataset ini?
Analisis Unik (Unique Analysis):

Berapa banyak pelanggan unik (customer_id)?
Apakah terdapat duplikasi atau nilai yang hilang?
Analisis Geografis:

Negara bagian dan kota mana yang memiliki jumlah pelanggan terbanyak?
Apakah distribusi ini seragam, atau terdapat ketimpangan?
Pola dan Anomali:

Apakah terdapat nilai yang tidak wajar dalam dataset, seperti kode pos kosong atau nilai pelanggan negatif?
Apakah terdapat pelanggan yang muncul lebih dari satu kali?
Hubungan Antarvariabel:

Apakah terdapat hubungan antara negara bagian dan kota tertentu dalam hal jumlah pelanggan?
Jika ada data tambahan (misalnya, penjualan), apakah terdapat hubungan antara wilayah dan pendapatan?

## Visualization & Explanatory Analysis

### Pertanyaan 1:
"""

import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(12, 6))
sns.barplot(x=customer_state.index, y=customer_state.values)
plt.title("Distribusi Pelanggan Berdasarkan Negara Bagian")
plt.xlabel("Negara Bagian")
plt.ylabel("Jumlah Pelanggan")
plt.xticks(rotation=45)
plt.show()

"""### Pertanyaan 2:"""

top_cities = customer_city.head(10)
plt.figure(figsize=(12, 6))
sns.barplot(x=top_cities.index, y=top_cities.values)
plt.title("Top 10 Kota dengan Jumlah Pelanggan Terbanyak")
plt.xlabel("Kota")
plt.ylabel("Jumlah Pelanggan")
plt.xticks(rotation=45)
plt.show()

"""**Insight:**
Jika kita menjalankan kode ini dengan dataset, hasilnya mungkin memberikan wawasan seperti:

Jumlah Pelanggan Unik: 10.000 (contoh).
Negara Bagian dengan Pelanggan Terbanyak: California, Texas, Florida.
Kota dengan Pelanggan Terbanyak: Los Angeles, Houston, Miami.

## Analisis Lanjutan (Opsional)
"""



"""## Conclusion

- Conclution pertanyaan 1
- Conclution pertanyaan 2
"""